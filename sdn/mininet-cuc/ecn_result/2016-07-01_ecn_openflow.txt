使用 openflow 控制 ecn 策略 (外部命令 使用 python ecn_ovs_helper.py 控制 )


*** 结果分析
qmin=250000 的带宽效果较为理想

三个队列的测试结果 [50000, 60000, 70000], 吞吐带宽不是非常稳定.
增长到 [200000, 250000] 进行测试. 注意需要关闭 ryu 避免cpu利用率过高
这里固定 filter 间隔 filter_ms = 3.5 毫秒

*** 测试函数 ( 这里使用我们自定义的的ovs-ofclt 进行控制 quick=True)
python ecn_topy.py
  ecn_test_case.ovs_openflow_ecn(net, "py-", duration=120, qmins=[200000, 250000])  # 测试多组队列)

*** 测试结果

 result ***
ovs_openflow_ecn openflow-ecn-py-200000 min:200000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121211ms
<h1>: rtt min/avg/max/mdev = 100.093/166.324/418.949/50.748 ms, pipe 4
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    121.57      9.09
<s1>: start ecn policy qmin 200000 duration 135(s)...

 result ***  250000
ovs_openflow_ecn openflow-ecn-py-250000 min:250000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121885ms
<h1>: rtt min/avg/max/mdev = 100.087/197.408/421.842/59.268 ms, pipe 5
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    121.58      9.41 / 9.42
<s1>: start ecn policy qmin 250000 duration 135(s)...


 result *** 0.0025
ovs_openflow_ecn openflow-ecn-py-150000 min:150000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 122515ms
<h1>: rtt min/avg/max/mdev = 100.066/125.199/513.275/45.224 ms, pipe 5
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    129.76      6.69
<s1>: start ecn policy qmin 150000 duration 135(s)...


过滤时延固定
filter_duration_fix = 2ms
ovs_openflow_ecn openflow-ecn-py-70000 min:70000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 70000 duration 120(s)...
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 122078ms
<h1>: rtt min/avg/max/mdev = 100.078/129.104/576.736/52.160 ms, pipe 6
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    125.81     6.88 /  7.19 / 7.70




ovs_openflow_ecn py-50000 min:50000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 50000 duration 120(s)...
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121083ms
<h1>: rtt min/avg/max/mdev = 100.080/115.433/290.496/17.157 ms, pipe 3
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    120.95      7.72

ovs_openflow_ecn py-60000 min:60000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 60000 duration 120(s)...
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    120.66      8.60 / 8.16
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121106ms
<h1>: rtt min/avg/max/mdev = 100.090/121.475/163.448/17.315 ms, pipe 2


ovs_openflow_ecn py-65000 min:65000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 65000 duration 120(s)...
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 120977ms
<h1>: rtt min/avg/max/mdev = 100.053/116.314/174.225/18.549 ms, pipe 2
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    120.78      7.88 / 8.27

ovs_openflow_ecn py-70000 min:70000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 70000 duration 120(s)...
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    120.77       7.57 / 8.52 (8M 的结果无法再恢复出了, 奇怪)
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121224ms
<h1>: rtt min/avg/max/mdev = 100.073/117.019/174.362/19.760 ms, pipe 2

ovs_openflow_ecn py-75000 min:75000 qlen:200 bw:10Mbps lat:50ms no red:
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<s1>: start ecn policy qmin 75000 duration 120(s)...
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 120924ms
<h1>: rtt min/avg/max/mdev = 100.076/128.965/170.435/20.059 ms, pipe 2
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    120.69      9.03


*** 结果分析


openflow ecn 策略比 drop 策略的效率更好. (TODO: red ecn 的策略没有 drop 好. Why? )


*** 测试函数 ( 这里使用标准的ovs-ofclt 进行控制 quick=False)
python ecn_topy.py
  ecn_test_case.test11_base(net, "TEST11-py-", duration=120)  # 独立测试TEST 11
python ecn_ovs_helper.py start [ecn | drop]
    start_opeflow_ecn(queue_min=75000, sleep_interval=0.0025, ecn_policy=ecn, quick=False)

*** 测试结果
 result ***
py-75000-ecn 外部参数: start_opeflow_ecn(queue_min=75000, sleep_interval=0.0025, ecn_policy=True) # ecn
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121258ms
<h1>: rtt min/avg/max/mdev = 100.070/110.550/406.463/27.224 ms, pipe 4
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    122.34      6.31

*** 测试结果
 result ***
py-75000-drop 外部参数: start_opeflow_ecn(queue_min=75000, sleep_interval=0.0025, ecn_policy=False) # Drop
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1200 packets transmitted, 1200 received, 0% packet loss, time 121367ms
<h1>: rtt min/avg/max/mdev = 100.077/120.032/309.755/25.285 ms, pipe 4
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    124.00      4.60


*** 结果分析
这里看到队列不小的情况下, 延时已经不太好, 而链路利用率不够提高
说明是

*** 测试结果
 result ***
py-25000
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    180.97      8.53
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1800 packets transmitted, 1800 received, 0% packet loss, time 181671ms
<h1>: rtt min/avg/max/mdev = 100.112/137.008/344.179/25.161 ms, pipe 4

py-50000
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    180.63      8.91
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1800 packets transmitted, 1800 received, 0% packet loss, time 181438ms
<h1>: rtt min/avg/max/mdev = 100.128/139.084/227.173/19.244 ms, pipe 3

py-75000
<h1>: PING h3 (10.0.0.3) 56(84) bytes of data.
<h2>: MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 0 AF_INET to h3 () port 0 AF_INET : demo
<h2>: Recv   Send    Send
<h2>: Socket Socket  Message  Elapsed
<h2>: Size   Size    Size     Time     Throughput
<h2>: bytes  bytes   bytes    secs.    10^6bits/sec
<h2>:
<h2>: 87380  87380  87380    180.75      9.13
<h1>:
<h1>: --- h3 ping statistics ---
<h1>: 1800 packets transmitted, 1800 received, 0% packet loss, time 181467ms
<h1>: rtt min/avg/max/mdev = 100.097/138.488/197.263/19.738 ms, pipe 2
